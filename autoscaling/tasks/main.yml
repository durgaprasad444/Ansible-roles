---
#- name: launching a01 instance
#  ec2:
#    aws_access_key: "{{ aws_access_key }}"
#    aws_secret_key: "{{ aws_secret_key }}"
#    key_name: key_linux
#    instance_type: t2.micro
#    image: ami-6cd6f714
#    group: launch-wizard-1
#    vpc_subnet_id: subnet-d54610ac
#    region: us-west-2
#    assign_public_ip: yes
#  tags:
#    - ec2

- name: launching load balancer
  ec2_elb_lb:
    name: "{{ ename }}"
    region: "{{ region }}"
    state: present
    subnets: "{{ subnets | join(',') }}"
    security_group_ids: sg-04975777
    connection_draining_timeout: 60
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80
    health_check:
        ping_protocol: http
        ping_port: 80
        ping_path: "/"
        response_timeout: 5
        interval: 30
        unhealthy_threshold: 5
        healthy_threshold: 5

- ec2_lc:
    name: "{{ ename }}_lauchgroup"
    image_id: "{{ image }}" 
    key_name: "{{ keypair }}" 
    region: "{{ region }}" 
    security_groups: sg-04975777
    instance_type: "{{ instance_type }}"
    assign_public_ip: yes

- ec2_asg:
    name: "{{ ename}}_asg"
    region: "{{ region }}"
    load_balancers: "{{ ename }}"
    launch_config_name: "{{ ename}}_lauchgroup"
    vpc_zone_identifier: "{{ subnets | join(',') }}"
    health_check_period: 60
    health_check_type: EC2
    termination_policies: NewestInstance
    min_size: 1 
    max_size: 3
    desired_capacity: 1


- name: creating scale down  policy
  ec2_scaling_policy:
    state: present
    region: "{{ region }}"
    name: autoscale-down-policy
    adjustment_type: ChangeInCapacity
    asg_name: "{{ ename }}_asg"
    scaling_adjustment: -1
    min_adjustment_step: -1
    cooldown: 60
  register: scale_down_policy
  tags: scaling_policy

- name: creating scale up policy
  ec2_scaling_policy:
    state: present
    region: "{{ region }}"
    name: autoscale-up-policy
    adjustment_type: ChangeInCapacity
    asg_name: "{{ ename }}_asg"
    scaling_adjustment: 1
    min_adjustment_step: 1
    cooldown: 60
  register: scale_up_policy
  tags: scaling_policy

- name: creating scale down alarm
  ec2_metric_alarm:
    state: present
    region: "{{ region }}"
    name: "cpu-utilization-low"
    metric: CPUUtilization
    namespace: "AWS/EC2"
    statistic: Average
    comparison: "<"
    threshold: 40.0
    period: 60
    evaluation_periods: 1
    unit: "Percent"
    description: "This will alarm when cpu usage average is lower than 40% for 1 minute "
    dimensions:
      AutoScalingGroupName: "{{ ename }}_asg"
    alarm_actions:
    - "{{ scale_down_policy.arn }}"
  tags: alarm

- name: creating scale up alarm
  ec2_metric_alarm:
    state: present
    region: "{{ region }}"
    name: "cpu-utilization-high"
    metric: CPUUtilization
    namespace: "AWS/EC2"
    statistic: Average
    comparison: ">="
    threshold: 60.0
    period: 60
    evaluation_periods: 1
    unit: "Percent"
    description: "This will alarm when cpu usage average is higher than 60% for 1 minute "
    dimensions:
      AutoScalingGroupName: "{{ ename }}_asg"
    alarm_actions:
      - "{{ scale_up_policy.arn }}"
  tags: alarm

